"""last modified: 04/16/2021downloading network of streets"""#%% packagesimport geopandas as gpdimport numpy as npimport pandas as pdimport folium#%% import street data and transform coordinatesprint('acquiring data...')raw = gpd.read_file('http://bostonopendata-boston.opendata.arcgis.com/datasets/cfd1740c2e4b49389f47a9ce2dd236cc_8.zip?outSR=%7B%22latestWkid%22%3A2249%2C%22wkid%22%3A102686%7D')streets = raw.to_crs(epsg = 4326)[['OBJECTID', 'ST_NAME', 'ST_TYPE', 'geometry']]streets.columns = ['id', 'name', 'type', 'geometry']#%% visualizingprint('generating map of streets...')base_path = '../maps/street_map.html'# function to generate base mapdef generate_base(default_location = [42.3150,-71.0700]):    base_map = folium.Map(location = default_location,                          zoom_start = 12,                          tiles = 'CartoDB positron')    return base_map# generating base mapbase = generate_base()folium.Choropleth(    streets,    line_weight=3,    line_color='blue').add_to(base)print('saving map...')base.save(base_path)print('generating map of intersections...')base_path = '../maps/intersect_map.html'# generating base mapbase_intersect = generate_base()endpoints = [np.array(g)[x] for x in [0,-1] for g in streets.geometry.tolist()]endpoints = pd.DataFrame(endpoints, columns = ['lon', 'lat'])reduced = endpoints[~endpoints.duplicated()]# latitudes and longitudes as listslatitudes = list(reduced.lat)longitudes = list(reduced.lon)for lat, lon in zip(latitudes, longitudes):    folium.Circle(        location = [lat,lon],        radius = 10,        color = 'blue',        fill = True,        weight = 1.5        ).add_to(base_intersect)print('saving map...')base_intersect.save(base_path)#%% exportprint('exporting streets...')output_path = '../../datasets_clean/streets.geojson'# outputting datastreets.to_file(output_path, driver='GeoJSON')    print('done.')    